/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { EToken, ETokenInterface } from "../../contracts/EToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenURI_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "ConfidentialFungibleTokenInvalidGatewayRequest",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenInvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenInvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenUnauthorizedCaller",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenUnauthorizedSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenUnauthorizedUseOfEncryptedAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "HandlesAlreadySavedForRequestID",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidKMSSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandleFoundForRequestID",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedHandleType",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "euint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "AmountDisclosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
    ],
    name: "ConfidentialTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
    ],
    name: "DecryptionFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "until",
        type: "uint48",
      },
    ],
    name: "OperatorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "confidentialBalanceOf",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "confidentialTotalSupply",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "confidentialTransfer",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
    ],
    name: "confidentialTransfer",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "confidentialTransferAndCall",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "confidentialTransferAndCall",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "confidentialTransferFrom",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
    ],
    name: "confidentialTransferFrom",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "confidentialTransferFromAndCall",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "confidentialTransferFromAndCall",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "euint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
    ],
    name: "discloseEncryptedAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "finalizeDiscloseEncryptedAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "isOperator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint48",
        name: "until",
        type: "uint48",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b5060405161306e38038061306e83398101604081905261002e91610a99565b848383836100d56100d0604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d5956020820152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac9181019190915273bc91f3dad1a5f19f8390c400196e58073b6a0bc4606082015290565b610177565b6100f273a02cda4ca3a71d7c46997716f4283aa851c28812610230565b60046100fe8482610bdb565b50600561010b8382610bdb565b5060066101188282610bdb565b5050506001600160a01b038216905061014b57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6101548161026d565b505f61015f85610286565b905061016b86826102a1565b50505050505050610cdc565b80515f51602061302e5f395f51905f5280546001600160a01b03199081166001600160a01b039384161790915560208301515f51602061304e5f395f51905f528054831691841691909117905560408301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6028054831691841691909117905560608301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6038054909216921691909117905550565b50565b7f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0080546001600160a01b0319166001600160a01b03831617905550565b600880546001600160a01b031916905561022d816102e9565b5f61029b6001600160401b038316600561033a565b92915050565b5f806001600160a01b0384166102d657604051636e41946d60e11b81526001600160a01b039091166004820152602401610142565b506102e25f84846103d1565b9392505050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f51602061304e5f395f51905f5254604051639cd07acb60e01b81525f915f51602061302e5f395f51905f52916001600160a01b0390911690639cd07acb906103899087908790600401610c95565b6020604051808303815f875af11580156103a5573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103c99190610cc5565b949350505050565b5f6103dd848484610404565b90506103fc6103eb60035490565b6007546001600160a01b03166105e3565b509392505050565b5f80806001600160a01b03861661043b5760035461042290856105f5565b90925090506104308161063f565b5060038190556104bf565b6001600160a01b0386165f90815260208190526040902054868161047e57604051636b8830d760e11b81526001600160a01b039091166004820152602401610142565b50610489818661064e565b90935091506104978261063f565b506104a282886105e3565b50506001600160a01b0386165f9081526020819052604090208190555b6104d282856104cd5f610286565b610679565b92506001600160a01b038516610505576003546104ef9084610685565b90506104fa8161063f565b506003819055610559565b6001600160a01b0385165f9081526020819052604090205461052790846106b3565b90506105328161063f565b5061053d81866105e3565b506001600160a01b0385165f9081526020819052604090208190555b6001600160a01b038616156105745761057283876105e3565b505b6001600160a01b0385161561058f5761058d83866105e3565b505b6105988361063f565b5082856001600160a01b0316876001600160a01b03167f67500e8d0ed826d2194f514dd0d8124f35648ab6e3fb5e6ed867134cffe661e960405160405180910390a450509392505050565b5f6105ee83836106e1565b5090919050565b5f8083610610576106066001610757565b9150829050610638565b5f61061b85856106b3565b90506106278186610772565b9250610634838287610679565b9150505b9250929050565b5f61064a82306106e1565b5090565b5f8061065a8484610772565b91506106708261066a8686610685565b86610679565b90509250929050565b5f6103c98484846107a0565b5f82610697576106945f610286565b92505b816106a8576106a55f610286565b91505b6102e283835f610836565b5f826106c5576106c25f610286565b92505b816106d6576106d35f610286565b91505b6102e283835f6108f3565b5f5f51602061302e5f395f51905f528054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b15801561073c575f5ffd5b505af115801561074e573d5f5f3e3d5ffd5b50505050505050565b5f61029b82610766575f610769565b60015b60ff165f61033a565b5f82610784576107815f610286565b92505b81610795576107925f610286565b91505b6102e283835f61096a565b5f805f51602061302e5f395f51905f526001810154604051637702dcff60e01b81526004810188905260248101879052604481018690529192506001600160a01b031690637702dcff906064016020604051808303815f875af1158015610809573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061082d9190610cc5565b95945050505050565b5f5f82156108495750600160f81b61084c565b505f5b5f51602061304e5f395f51905f52546040516303056db360e31b815260048101879052602481018690526001600160f81b0319831660448201525f51602061302e5f395f51905f52916001600160a01b03169063182b6d98906064015b6020604051808303815f875af11580156108c5573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108e99190610cc5565b9695505050505050565b5f5f82156109065750600160f81b610909565b505f5b5f51602061304e5f395f51905f525460405163022f65e760e31b815260048101879052602481018690526001600160f81b0319831660448201525f51602061302e5f395f51905f52916001600160a01b03169063117b2f38906064016108a9565b5f5f821561097d5750600160f81b610980565b505f5b5f51602061304e5f395f51905f5254604051631391547f60e01b815260048101879052602481018690526001600160f81b0319831660448201525f51602061302e5f395f51905f52916001600160a01b031690631391547f906064016108a9565b80516001600160401b03811681146109f7575f5ffd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610a1f575f5ffd5b81516001600160401b03811115610a3857610a386109fc565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610a6657610a666109fc565b604052818152838201602001851015610a7d575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b5f5f5f5f5f60a08688031215610aad575f5ffd5b85516001600160a01b0381168114610ac3575f5ffd5b9450610ad1602087016109e1565b60408701519094506001600160401b03811115610aec575f5ffd5b610af888828901610a10565b606088015190945090506001600160401b03811115610b15575f5ffd5b610b2188828901610a10565b608088015190935090506001600160401b03811115610b3e575f5ffd5b610b4a88828901610a10565b9150509295509295909350565b600181811c90821680610b6b57607f821691505b602082108103610b8957634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115610bd657805f5260205f20601f840160051c81016020851015610bb45750805b601f840160051c820191505b81811015610bd3575f8155600101610bc0565b50505b505050565b81516001600160401b03811115610bf457610bf46109fc565b610c0881610c028454610b57565b84610b8f565b6020601f821160018114610c3a575f8315610c235750848201515b5f19600385901b1c1916600184901b178455610bd3565b5f84815260208120601f198516915b82811015610c695787850151825560209485019460019092019101610c49565b5084821015610c8657868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b8281526040810160548310610cb857634e487b7160e01b5f52602160045260245ffd5b8260208301529392505050565b5f60208284031215610cd5575f5ffd5b5051919050565b61234580610ce95f395ff3fe608060405234801561000f575f5ffd5b5060043610610184575f3560e01c806379ba5097116100dd578063d4febb9611610088578063e30c397811610063578063e30c39781461031b578063eb3155b51461032c578063f2fde38b1461033f575f5ffd5b8063d4febb96146102e2578063de642119146102f5578063e064b9bb14610308575f5ffd5b8063b6363cf2116100b8578063b6363cf214610299578063c535803c146102bc578063c7b8a75e146102cf575f5ffd5b806379ba5097146102645780638da5cb5b1461026c57806395d89b4114610291575f5ffd5b80633c130d901161013d5780635bebed7e116101185780635bebed7e14610234578063715018a6146102475780637279e26414610251575f5ffd5b80633c130d9014610211578063537d3c5014610219578063540952271461022c575f5ffd5b8063313ce5671161016d578063313ce567146101c7578063344ff101146101d657806334c45743146101fe575f5ffd5b806306fdde03146101885780632fb74e62146101a6575b5f5ffd5b610190610352565b60405161019d9190611b78565b60405180910390f35b6101b96101b4366004611be3565b6103e2565b60405190815260200161019d565b6040516006815260200161019d565b6101b96101e4366004611c39565b6001600160a01b03165f9081526020819052604090205490565b6101b961020c366004611c52565b610435565b6101906104de565b6101b9610227366004611be3565b6104ed565b6003546101b9565b6101b9610242366004611ceb565b61054f565b61024f6105a3565b005b61024f61025f366004611d58565b6105b6565b61024f610643565b6007546001600160a01b03165b6040516001600160a01b03909116815260200161019d565b610190610687565b6102ac6102a7366004611ea9565b610696565b604051901515815260200161019d565b61024f6102ca366004611ed1565b6106e8565b6101b96102dd366004611ee8565b61079e565b61024f6102f0366004611f52565b610841565b6101b9610303366004611f91565b610850565b6101b9610316366004611ee8565b6108ac565b6008546001600160a01b0316610279565b6101b961033a36600461201a565b610931565b61024f61034d366004611c39565b6109d0565b60606004805461036190612054565b80601f016020809104026020016040519081016040528092919081815260200182805461038d90612054565b80156103d85780601f106103af576101008083540402835291602001916103d8565b820191905f5260205f20905b8154815290600101906020018083116103bb57829003601f168201915b5050505050905090565b5f61042c33866104278787878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610a4e92505050565b610a5b565b95945050505050565b5f6104408833610696565b8833909161047957604051631ae7729b60e11b81526001600160a01b039283166004820152911660248201526044015b60405180910390fd5b50506104c688886104bf8989898080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610a4e92505050565b8686610adb565b90506104d28133610b32565b50979650505050505050565b60606006805461036190612054565b5f6104f88433610b44565b8433909161052b5760405163118f6e5360e31b815260048101929092526001600160a01b03166024820152604401610470565b505061053a3386868686610adb565b90506105468133610b32565b50949350505050565b5f61055a8233610b44565b8233909161058d5760405163118f6e5360e31b815260048101929092526001600160a01b03166024820152604401610470565b505061059a338484610a5b565b90505b92915050565b6105ab610b4f565b6105b45f610b7c565b565b6105c08382610ba2565b5f8381526002602052604090205483816105f057604051630ab5f57d60e01b815260040161047091815260200190565b5060405167ffffffffffffffff8416815281907f83bbbc07896439e5d950a6cead04cbc676180af7a61cecf43f5296475057f5719060200160405180910390a25050505f90815260026020526040812055565b60085433906001600160a01b0316811461067b5760405163118cdaa760e01b81526001600160a01b0382166004820152602401610470565b61068481610b7c565b50565b60606005805461036190612054565b5f816001600160a01b0316836001600160a01b0316148061059a5750506001600160a01b039182165f90815260016020908152604080832093909416825291909152205465ffffffffffff1642111590565b6106f28133610b44565b801561070357506107038130610b44565b813390916107365760405163118f6e5360e31b815260048101929092526001600160a01b03166024820152604401610470565b50506040805160018082528183019092525f916020808301908036833701905050905081815f8151811061076c5761076c61208c565b60209081029190910101525f61078982631c9e789960e21b610c09565b5f908152600260205260409020929092555050565b5f6107a98433610b44565b843390916107dc5760405163118f6e5360e31b815260048101929092526001600160a01b03166024820152604401610470565b50506107e88633610696565b8633909161081c57604051631ae7729b60e11b81526001600160a01b03928316600482015291166024820152604401610470565b505061082b8686868686610adb565b90506108378133610b32565b5095945050505050565b61084c338383610c15565b5050565b5f61089533886104bf8989898080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610a4e92505050565b90506108a18133610b32565b509695505050505050565b5f6108b78633610696565b863390916108eb57604051631ae7729b60e11b81526001600160a01b03928316600482015291166024820152604401610470565b505061082b86866104278787878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610a4e92505050565b5f61093c8233610b44565b8233909161096f5760405163118f6e5360e31b815260048101929092526001600160a01b03166024820152604401610470565b505061097b8433610696565b843390916109af57604051631ae7729b60e11b81526001600160a01b03928316600482015291166024820152604401610470565b50506109bc848484610a5b565b90506109c88133610b32565b509392505050565b6109d8610b4f565b600880546001600160a01b03831673ffffffffffffffffffffffffffffffffffffffff199091168117909155610a166007546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b5f61059a83836005610c8c565b5f806001600160a01b038516610a9057604051631a9bbf8b60e11b81526001600160a01b039091166004820152602401610470565b505f6001600160a01b038416610ac557604051636e41946d60e11b81526001600160a01b039091166004820152602401610470565b50610ad1848484610d99565b90505b9392505050565b5f5f610ae8878787610a5b565b90505f610af9338989858989610dc4565b90505f610b19888a610b1485610b0e5f610ec8565b88610ede565b610d99565b9050610b258382610eea565b9998505050505050505050565b5f610b3d8383610f18565b5090919050565b5f61059a8383610f8c565b6007546001600160a01b031633146105b45760405163118cdaa760e01b8152336004820152602401610470565b6008805473ffffffffffffffffffffffffffffffffffffffff1916905561068481611018565b5f610bac83611076565b90505f610bb98284611147565b905080610bd95760405163cf6c44e960e01b815260040160405180910390fd5b60405184907f1af0453083661051f6e56e5c070792320652e612154bf9af8637bb1e7655b99d905f90a250505050565b5f61059a83835f61124f565b6001600160a01b038381165f81815260016020908152604080832094871680845294825291829020805465ffffffffffff191665ffffffffffff871690811790915591519182527f921a218a75d18e8ec5704851e6b234a85725b21a2521ce889622c35dedc1fa12910160405180910390a3505050565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6015460405163196d0b9b60e01b81525f915f5160206122f05f395f51905f52916001600160a01b039091169063196d0b9b90610cf29088903390899089906004016120d4565b6020604051808303815f875af1158015610d0e573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d32919061210a565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b158015610d7b575f5ffd5b505af1158015610d8d573d5f5f3e3d5ffd5b50505050509392505050565b5f610da5848484611388565b90506109c8610db360035490565b6007546001600160a01b0316611565565b5f6001600160a01b0385163b15610eb1576040516346083bfd60e01b81526001600160a01b038616906346083bfd90610e09908a908a90899089908990600401612121565b6020604051808303815f875af1925050508015610e43575060408051601f3d908101601f19168201909252610e409181019061210a565b60015b610eaa573d808015610e70576040519150601f19603f3d011682016040523d82523d5f602084013e610e75565b606091505b5080515f03610ea257604051636e41946d60e11b81526001600160a01b0387166004820152602401610470565b805181602001fd5b9050610ebe565b610ebb6001611570565b90505b9695505050505050565b5f61059d8267ffffffffffffffff166005611587565b5f610ad1848484611629565b5f82610efc57610ef95f610ec8565b92505b81610f0d57610f0a5f610ec8565b91505b61059a83835f6116b6565b5f5160206122f05f395f51905f528054604051630f8e573b60e21b8152600481018590526001600160a01b03848116602483015290911690633e395cec906044015b5f604051808303815f87803b158015610f71575f5ffd5b505af1158015610f83573d5f5f3e3d5ffd5b50505050505050565b5f805f5160206122f05f395f51905f5280546040516382027b6d60e01b8152600481018790526001600160a01b0386811660248301529293509116906382027b6d90604401602060405180830381865afa158015610fec573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110109190612176565b949350505050565b600780546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f8181527f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0260205260408120546060917f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d009190036110e75760405163d66ca67560e01b815260040160405180910390fd5b5f8381526002820160209081526040918290208054835181840281018401909452808452909183018282801561113a57602002820191905f5260205f20905b815481526020019060010190808311611126575b5050505050915050919050565b5f6024816111548561177c565b90505f8167ffffffffffffffff81111561117057611170611d13565b6040519080825280601f01601f19166020018201604052801561119a576020820181803683370190505b509050818360208301377fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60254604051632c027b1360e21b81525f5160206122f05f395f51905f52916001600160a01b03169063b009ec4c90611204908a9086908b906004016121cf565b6020604051808303815f875af1158015611220573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112449190612176565b979650505050505050565b7f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d01545f5160206122f05f395f51905f528054604051637d6e912360e11b81527f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0092916001600160a01b03169063fadd2246906112cf908990600401612259565b5f604051808303815f87803b1580156112e6575f5ffd5b505af11580156112f8573d5f5f3e3d5ffd5b50508354604051633263b83b60e01b81526001600160a01b039091169250633263b83b915086906113319087908b908b9060040161226b565b5f604051808303818588803b158015611348575f5ffd5b505af115801561135a573d5f5f3e3d5ffd5b50505050506113698387611829565b600182018054905f61137a836122b0565b919050555050509392505050565b5f80806001600160a01b0386166113be576113a5600354856118bc565b90925090506113b381611906565b506003819055611442565b6001600160a01b0386165f90815260208190526040902054868161140157604051636b8830d760e11b81526001600160a01b039091166004820152602401610470565b5061140c8186611915565b909350915061141a82611906565b506114258288611565565b50506001600160a01b0386165f9081526020819052604090208190555b61145582856114505f610ec8565b610ede565b92506001600160a01b0385166114875761147160035484610eea565b905061147c81611906565b5060038190556114db565b6001600160a01b0385165f908152602081905260409020546114a99084611940565b90506114b481611906565b506114bf8186611565565b506001600160a01b0385165f9081526020819052604090208190555b6001600160a01b038616156114f6576114f48387611565565b505b6001600160a01b038516156115115761150f8386611565565b505b61151a83611906565b5082856001600160a01b0316876001600160a01b03167f67500e8d0ed826d2194f514dd0d8124f35648ab6e3fb5e6ed867134cffe661e960405160405180910390a450509392505050565b5f610b3d838361196e565b5f61059d8261157f575f611582565b60015b60ff165f5b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60154604051639cd07acb60e01b81525f915f5160206122f05f395f51905f52916001600160a01b0390911690639cd07acb906115e990879087906004016122c8565b6020604051808303815f875af1158015611605573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611010919061210a565b5f805f5160206122f05f395f51905f526001810154604051637702dcff60e01b81526004810188905260248101879052604481018690529192506001600160a01b031690637702dcff906064016020604051808303815f875af1158015611692573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061042c919061210a565b5f5f82156116c95750600160f81b6116cc565b505f5b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea601546040516303056db360e31b815260048101879052602481018690526001600160f81b0319831660448201525f5160206122f05f395f51905f52916001600160a01b03169063182b6d98906064015b6020604051808303815f875af1158015611758573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ebe919061210a565b80515f9081805b8281101561181d575f85828151811061179e5761179e61208c565b6020026020010151601e602081106117b8576117b861208c565b1a60538111156117ca576117ca6120a0565b905060098160538111156117e0576117e06120a0565b60ff1610156117fb576117f46020846122dc565b9250611814565b60405163ce54a8d160e01b815260040160405180910390fd5b50600101611783565b506110106020826122dc565b5f8281527f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0260205260409020547f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d00901561189657604051633f06d22b60e01b815260040160405180910390fd5b5f838152600282016020908152604090912083516118b692850190611af6565b50505050565b5f80836118d7576118cd6001611570565b91508290506118ff565b5f6118e28585611940565b90506118ee81866119b4565b92506118fb838287610ede565b9150505b9250929050565b5f611911823061196e565b5090565b5f5f61192184846119b4565b9150611937826119318686610eea565b86610ede565b90509250929050565b5f826119525761194f5f610ec8565b92505b81611963576119605f610ec8565b91505b61059a83835f6119e2565b5f5160206122f05f395f51905f528054604051635ca4b5b160e11b8152600481018590526001600160a01b0384811660248301529091169063b9496b6290604401610f5a565b5f826119c6576119c35f610ec8565b92505b816119d7576119d45f610ec8565b91505b61059a83835f611a6c565b5f5f82156119f55750600160f81b6119f8565b505f5b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6015460405163022f65e760e31b815260048101879052602481018690526001600160f81b0319831660448201525f5160206122f05f395f51905f52916001600160a01b03169063117b2f389060640161173c565b5f5f8215611a7f5750600160f81b611a82565b505f5b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60154604051631391547f60e01b815260048101879052602481018690526001600160f81b0319831660448201525f5160206122f05f395f51905f52916001600160a01b031690631391547f9060640161173c565b828054828255905f5260205f20908101928215611b2f579160200282015b82811115611b2f578251825591602001919060010190611b14565b506119119291505b80821115611911575f8155600101611b37565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f61059a6020830184611b4a565b80356001600160a01b0381168114611ba0575f5ffd5b919050565b5f5f83601f840112611bb5575f5ffd5b50813567ffffffffffffffff811115611bcc575f5ffd5b6020830191508360208285010111156118ff575f5ffd5b5f5f5f5f60608587031215611bf6575f5ffd5b611bff85611b8a565b935060208501359250604085013567ffffffffffffffff811115611c21575f5ffd5b611c2d87828801611ba5565b95989497509550505050565b5f60208284031215611c49575f5ffd5b61059a82611b8a565b5f5f5f5f5f5f5f60a0888a031215611c68575f5ffd5b611c7188611b8a565b9650611c7f60208901611b8a565b955060408801359450606088013567ffffffffffffffff811115611ca1575f5ffd5b611cad8a828b01611ba5565b909550935050608088013567ffffffffffffffff811115611ccc575f5ffd5b611cd88a828b01611ba5565b989b979a50959850939692959293505050565b5f5f60408385031215611cfc575f5ffd5b611d0583611b8a565b946020939093013593505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611d5057611d50611d13565b604052919050565b5f5f5f60608486031215611d6a575f5ffd5b83359250602084013567ffffffffffffffff81168114611d88575f5ffd5b9150604084013567ffffffffffffffff811115611da3575f5ffd5b8401601f81018613611db3575f5ffd5b803567ffffffffffffffff811115611dcd57611dcd611d13565b8060051b611ddd60208201611d27565b91825260208184018101929081019089841115611df8575f5ffd5b6020850192505b83831015611e9a57823567ffffffffffffffff811115611e1d575f5ffd5b8501603f81018b13611e2d575f5ffd5b602081013567ffffffffffffffff811115611e4a57611e4a611d13565b611e5d601f8201601f1916602001611d27565b8181526040838301018d1015611e71575f5ffd5b816040840160208301375f60208383010152808552505050602082019150602083019250611dff565b80955050505050509250925092565b5f5f60408385031215611eba575f5ffd5b611ec383611b8a565b915061193760208401611b8a565b5f60208284031215611ee1575f5ffd5b5035919050565b5f5f5f5f5f60808688031215611efc575f5ffd5b611f0586611b8a565b9450611f1360208701611b8a565b935060408601359250606086013567ffffffffffffffff811115611f35575f5ffd5b611f4188828901611ba5565b969995985093965092949392505050565b5f5f60408385031215611f63575f5ffd5b611f6c83611b8a565b9150602083013565ffffffffffff81168114611f86575f5ffd5b809150509250929050565b5f5f5f5f5f5f60808789031215611fa6575f5ffd5b611faf87611b8a565b955060208701359450604087013567ffffffffffffffff811115611fd1575f5ffd5b611fdd89828a01611ba5565b909550935050606087013567ffffffffffffffff811115611ffc575f5ffd5b61200889828a01611ba5565b979a9699509497509295939492505050565b5f5f5f6060848603121561202c575f5ffd5b61203584611b8a565b925061204360208501611b8a565b929592945050506040919091013590565b600181811c9082168061206857607f821691505b60208210810361208657634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b605481106120d057634e487b7160e01b5f52602160045260245ffd5b9052565b8481526001600160a01b0384166020820152608060408201525f6120fb6080830185611b4a565b905061042c60608301846120b4565b5f6020828403121561211a575f5ffd5b5051919050565b6001600160a01b03861681526001600160a01b038516602082015283604082015260806060820152816080820152818360a08301375f81830160a090810191909152601f909201601f19160101949350505050565b5f60208284031215612186575f5ffd5b81518015158114610ad4575f5ffd5b5f8151808452602084019350602083015f5b828110156121c55781518652602095860195909101906001016121a7565b5093949350505050565b606081525f6121e16060830186612195565b82810360208401526121f38186611b4a565b9050828103604084015280845180835260208301915060208160051b840101602087015f5b8381101561224a57601f19868403018552612234838351611b4a565b6020958601959093509190910190600101612218565b50909998505050505050505050565b602081525f61059a6020830184612195565b838152606060208201525f6122836060830185612195565b905063ffffffff60e01b83166040830152949350505050565b634e487b7160e01b5f52601160045260245ffd5b5f600182016122c1576122c161229c565b5060010190565b82815260408101610ad460208301846120b4565b8082018082111561059d5761059d61229c56feed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600a2646970667358221220c9d99e5e26c688c15bd78efcbc68ce70e1acced62e55002547110b39175bac3464736f6c634300081b0033ed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600ed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea601";

type ETokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ETokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EToken__factory extends ContractFactory {
  constructor(...args: ETokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    owner: AddressLike,
    amount: BigNumberish,
    name_: string,
    symbol_: string,
    tokenURI_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      owner,
      amount,
      name_,
      symbol_,
      tokenURI_,
      overrides || {}
    );
  }
  override deploy(
    owner: AddressLike,
    amount: BigNumberish,
    name_: string,
    symbol_: string,
    tokenURI_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      owner,
      amount,
      name_,
      symbol_,
      tokenURI_,
      overrides || {}
    ) as Promise<
      EToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EToken__factory {
    return super.connect(runner) as EToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ETokenInterface {
    return new Interface(_abi) as ETokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EToken {
    return new Contract(address, _abi, runner) as unknown as EToken;
  }
}
