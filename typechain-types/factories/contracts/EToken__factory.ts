/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { EToken, ETokenInterface } from "../../contracts/EToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenURI_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "ConfidentialFungibleTokenInvalidGatewayRequest",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenInvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenInvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenUnauthorizedCaller",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenUnauthorizedSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenUnauthorizedUseOfEncryptedAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "HandlesAlreadySavedForRequestID",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidKMSSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandleFoundForRequestID",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "euint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "AmountDisclosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
    ],
    name: "ConfidentialTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
    ],
    name: "DecryptionFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "until",
        type: "uint48",
      },
    ],
    name: "OperatorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "confidentialBalanceOf",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "confidentialTotalSupply",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "confidentialTransfer",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
    ],
    name: "confidentialTransfer",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "confidentialTransferAndCall",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "confidentialTransferAndCall",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "confidentialTransferFrom",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
    ],
    name: "confidentialTransferFrom",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "confidentialTransferFromAndCall",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "confidentialTransferFromAndCall",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "euint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
    ],
    name: "discloseEncryptedAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cleartexts",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "decryptionProof",
        type: "bytes",
      },
    ],
    name: "finalizeDiscloseEncryptedAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "isOperator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint48",
        name: "until",
        type: "uint48",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b50604051612e45380380612e4583398101604081905261002e91610a3f565b848383836100d56100d0604080516080810182525f80825260208201819052918101829052606081019190915250604080516080810182527350157cffd6bbfa2dece204a89ec419c23ef5755d815273cd3ab3bd6bcc0c0bf3e27912a92043e817b1cf69602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b61015a565b60046100e18482610b81565b5060056100ee8382610b81565b5060066100fb8282610b81565b5050506001600160a01b038216905061012e57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61013781610213565b505f6101428561022c565b905061014e8682610247565b50505050505050610c82565b80515f516020612e255f395f51905f5280546001600160a01b03199081166001600160a01b039384161790915560208301515f516020612e055f395f51905f528054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b50565b600880546001600160a01b03191690556102108161028f565b5f6102416001600160401b03831660056102e0565b92915050565b5f806001600160a01b03841661027c57604051636e41946d60e11b81526001600160a01b039091166004820152602401610125565b506102885f8484610377565b9392505050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f516020612e055f395f51905f5254604051639cd07acb60e01b81525f915f516020612e255f395f51905f52916001600160a01b0390911690639cd07acb9061032f9087908790600401610c3b565b6020604051808303815f875af115801561034b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061036f9190610c6b565b949350505050565b5f6103838484846103aa565b90506103a261039160035490565b6007546001600160a01b0316610589565b509392505050565b5f80806001600160a01b0386166103e1576003546103c8908561059b565b90925090506103d6816105e5565b506003819055610465565b6001600160a01b0386165f90815260208190526040902054868161042457604051636b8830d760e11b81526001600160a01b039091166004820152602401610125565b5061042f81866105f4565b909350915061043d826105e5565b506104488288610589565b50506001600160a01b0386165f9081526020819052604090208190555b61047882856104735f61022c565b61061f565b92506001600160a01b0385166104ab57600354610495908461062b565b90506104a0816105e5565b5060038190556104ff565b6001600160a01b0385165f908152602081905260409020546104cd9084610659565b90506104d8816105e5565b506104e38186610589565b506001600160a01b0385165f9081526020819052604090208190555b6001600160a01b0386161561051a576105188387610589565b505b6001600160a01b03851615610535576105338386610589565b505b61053e836105e5565b5082856001600160a01b0316876001600160a01b03167f67500e8d0ed826d2194f514dd0d8124f35648ab6e3fb5e6ed867134cffe661e960405160405180910390a450509392505050565b5f6105948383610687565b5090919050565b5f80836105b6576105ac60016106fd565b91508290506105de565b5f6105c18585610659565b90506105cd8186610718565b92506105da83828761061f565b9150505b9250929050565b5f6105f08230610687565b5090565b5f806106008484610718565b915061061682610610868661062b565b8661061f565b90509250929050565b5f61036f848484610746565b5f8261063d5761063a5f61022c565b92505b8161064e5761064b5f61022c565b91505b61028883835f6107dc565b5f8261066b576106685f61022c565b92505b8161067c576106795f61022c565b91505b61028883835f610899565b5f5f516020612e255f395f51905f528054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b1580156106e2575f5ffd5b505af11580156106f4573d5f5f3e3d5ffd5b50505050505050565b5f6102418261070c575f61070f565b60015b60ff165f6102e0565b5f8261072a576107275f61022c565b92505b8161073b576107385f61022c565b91505b61028883835f610910565b5f805f516020612e255f395f51905f526001810154604051637702dcff60e01b81526004810188905260248101879052604481018690529192506001600160a01b031690637702dcff906064016020604051808303815f875af11580156107af573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107d39190610c6b565b95945050505050565b5f5f82156107ef5750600160f81b6107f2565b505f5b5f516020612e055f395f51905f52546040516303056db360e31b815260048101879052602481018690526001600160f81b0319831660448201525f516020612e255f395f51905f52916001600160a01b03169063182b6d98906064015b6020604051808303815f875af115801561086b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061088f9190610c6b565b9695505050505050565b5f5f82156108ac5750600160f81b6108af565b505f5b5f516020612e055f395f51905f525460405163022f65e760e31b815260048101879052602481018690526001600160f81b0319831660448201525f516020612e255f395f51905f52916001600160a01b03169063117b2f389060640161084f565b5f5f82156109235750600160f81b610926565b505f5b5f516020612e055f395f51905f5254604051631391547f60e01b815260048101879052602481018690526001600160f81b0319831660448201525f516020612e255f395f51905f52916001600160a01b031690631391547f9060640161084f565b80516001600160401b038116811461099d575f5ffd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126109c5575f5ffd5b81516001600160401b038111156109de576109de6109a2565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610a0c57610a0c6109a2565b604052818152838201602001851015610a23575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b5f5f5f5f5f60a08688031215610a53575f5ffd5b85516001600160a01b0381168114610a69575f5ffd5b9450610a7760208701610987565b60408701519094506001600160401b03811115610a92575f5ffd5b610a9e888289016109b6565b606088015190945090506001600160401b03811115610abb575f5ffd5b610ac7888289016109b6565b608088015190935090506001600160401b03811115610ae4575f5ffd5b610af0888289016109b6565b9150509295509295909350565b600181811c90821680610b1157607f821691505b602082108103610b2f57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115610b7c57805f5260205f20601f840160051c81016020851015610b5a5750805b601f840160051c820191505b81811015610b79575f8155600101610b66565b50505b505050565b81516001600160401b03811115610b9a57610b9a6109a2565b610bae81610ba88454610afd565b84610b35565b6020601f821160018114610be0575f8315610bc95750848201515b5f19600385901b1c1916600184901b178455610b79565b5f84815260208120601f198516915b82811015610c0f5787850151825560209485019460019092019101610bef565b5084821015610c2c57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b8281526040810160548310610c5e57634e487b7160e01b5f52602160045260245ffd5b8260208301529392505050565b5f60208284031215610c7b575f5ffd5b5051919050565b61217680610c8f5f395ff3fe608060405234801561000f575f5ffd5b506004361061018f575f3560e01c806395d89b41116100dd578063da1f12ab11610088578063e30c397811610063578063e30c39781461032e578063eb3155b51461033f578063f2fde38b14610352575f5ffd5b8063da1f12ab14610300578063de64211914610308578063e064b9bb1461031b575f5ffd5b8063c535803c116100b8578063c535803c146102c7578063c7b8a75e146102da578063d4febb96146102ed575f5ffd5b806395d89b4114610289578063a573a9f614610291578063b6363cf2146102a4575f5ffd5b8063537d3c501161013d578063715018a611610118578063715018a61461025257806379ba50971461025c5780638da5cb5b14610264575f5ffd5b8063537d3c501461022457806354095227146102375780635bebed7e1461023f575f5ffd5b8063344ff1011161016d578063344ff101146101e157806334c45743146102095780633c130d901461021c575f5ffd5b806306fdde03146101935780632fb74e62146101b1578063313ce567146101d2575b5f5ffd5b61019b610365565b6040516101a89190611b08565b60405180910390f35b6101c46101bf366004611b73565b6103f5565b6040519081526020016101a8565b604051600681526020016101a8565b6101c46101ef366004611bc9565b6001600160a01b03165f9081526020819052604090205490565b6101c4610217366004611be2565b610448565b61019b6104f1565b6101c4610232366004611b73565b610500565b6003546101c4565b6101c461024d366004611c7b565b610562565b61025a6105b6565b005b61025a6105c9565b6007546001600160a01b03165b6040516001600160a01b0390911681526020016101a8565b61019b61060d565b61025a61029f366004611ca3565b61061c565b6102b76102b2366004611d1c565b61071e565b60405190151581526020016101a8565b61025a6102d5366004611d44565b610770565b6101c46102e8366004611d5b565b610826565b61025a6102fb366004611da8565b6108c9565b6127116101c4565b6101c4610316366004611de7565b6108d8565b6101c4610329366004611d5b565b610934565b6008546001600160a01b0316610271565b6101c461034d366004611e70565b6109b9565b61025a610360366004611bc9565b610a58565b60606004805461037490611eaa565b80601f01602080910402602001604051908101604052809291908181526020018280546103a090611eaa565b80156103eb5780601f106103c2576101008083540402835291602001916103eb565b820191905f5260205f20905b8154815290600101906020018083116103ce57829003601f168201915b5050505050905090565b5f61043f338661043a8787878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610ad692505050565b610ae3565b95945050505050565b5f610453883361071e565b8833909161048c57604051631ae7729b60e11b81526001600160a01b039283166004820152911660248201526044015b60405180910390fd5b50506104d988886104d28989898080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610ad692505050565b8686610b63565b90506104e58133610bba565b50979650505050505050565b60606006805461037490611eaa565b5f61050b8433610bcc565b8433909161053e5760405163118f6e5360e31b815260048101929092526001600160a01b03166024820152604401610483565b505061054d3386868686610b63565b90506105598133610bba565b50949350505050565b5f61056d8233610bcc565b823390916105a05760405163118f6e5360e31b815260048101929092526001600160a01b03166024820152604401610483565b50506105ad338484610ae3565b90505b92915050565b6105be610bd7565b6105c75f610c04565b565b60085433906001600160a01b031681146106015760405163118cdaa760e01b81526001600160a01b0382166004820152602401610483565b61060a81610c04565b50565b60606005805461037490611eaa565b61068e8585858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050604080516020601f890181900481028201810190925287815292508791508690819084018382808284375f92019190915250610c2a92505050565b5f8581526002602052604090205485816106be57604051630ab5f57d60e01b815260040161048391815260200190565b50807f83bbbc07896439e5d950a6cead04cbc676180af7a61cecf43f5296475057f5716106ed86880188611ee2565b60405167ffffffffffffffff909116815260200160405180910390a25050505f928352505060026020526040812055565b5f816001600160a01b0316836001600160a01b031614806105ad5750506001600160a01b039182165f90815260016020908152604080832093909416825291909152205465ffffffffffff1642111590565b61077a8133610bcc565b801561078b575061078b8130610bcc565b813390916107be5760405163118f6e5360e31b815260048101929092526001600160a01b03166024820152604401610483565b50506040805160018082528183019092525f916020808301908036833701905050905081815f815181106107f4576107f4611f09565b60209081029190910101525f610811826352b9d4fb60e11b610c93565b5f908152600260205260409020929092555050565b5f6108318433610bcc565b843390916108645760405163118f6e5360e31b815260048101929092526001600160a01b03166024820152604401610483565b5050610870863361071e565b863390916108a457604051631ae7729b60e11b81526001600160a01b03928316600482015291166024820152604401610483565b50506108b38686868686610b63565b90506108bf8133610bba565b5095945050505050565b6108d4338383610c9f565b5050565b5f61091d33886104d28989898080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610ad692505050565b90506109298133610bba565b509695505050505050565b5f61093f863361071e565b8633909161097357604051631ae7729b60e11b81526001600160a01b03928316600482015291166024820152604401610483565b50506108b3868661043a8787878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610ad692505050565b5f6109c48233610bcc565b823390916109f75760405163118f6e5360e31b815260048101929092526001600160a01b03166024820152604401610483565b5050610a03843361071e565b84339091610a3757604051631ae7729b60e11b81526001600160a01b03928316600482015291166024820152604401610483565b5050610a44848484610ae3565b9050610a508133610bba565b509392505050565b610a60610bd7565b600880546001600160a01b03831673ffffffffffffffffffffffffffffffffffffffff199091168117909155610a9e6007546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b5f6105ad83836005610d16565b5f806001600160a01b038516610b1857604051631a9bbf8b60e11b81526001600160a01b039091166004820152602401610483565b505f6001600160a01b038416610b4d57604051636e41946d60e11b81526001600160a01b039091166004820152602401610483565b50610b59848484610e23565b90505b9392505050565b5f5f610b70878787610ae3565b90505f610b81338989858989610e4e565b90505f610ba1888a610b9c85610b965f610f52565b88610f68565b610e23565b9050610bad8382610f74565b9998505050505050505050565b5f610bc58383610fa2565b5090919050565b5f6105ad8383611016565b6007546001600160a01b031633146105c75760405163118cdaa760e01b8152336004820152602401610483565b6008805473ffffffffffffffffffffffffffffffffffffffff1916905561060a816110a2565b5f610c3484611100565b90505f610c428285856111d1565b905080610c625760405163cf6c44e960e01b815260040160405180910390fd5b60405185907f1af0453083661051f6e56e5c070792320652e612154bf9af8637bb1e7655b99d905f90a25050505050565b5f6105ad83835f6112aa565b6001600160a01b038381165f81815260016020908152604080832094871680845294825291829020805465ffffffffffff191665ffffffffffff871690811790915591519182527f921a218a75d18e8ec5704851e6b234a85725b21a2521ce889622c35dedc1fa12910160405180910390a3505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163196d0b9b60e01b81525f915f5160206121215f395f51905f52916001600160a01b039091169063196d0b9b90610d7c908890339089908990600401611f3d565b6020604051808303815f875af1158015610d98573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dbc9190611f73565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b158015610e05575f5ffd5b505af1158015610e17573d5f5f3e3d5ffd5b50505050509392505050565b5f610e2f8484846113c5565b9050610a50610e3d60035490565b6007546001600160a01b03166115a2565b5f6001600160a01b0385163b15610f3b576040516346083bfd60e01b81526001600160a01b038616906346083bfd90610e93908a908a90899089908990600401611f8a565b6020604051808303815f875af1925050508015610ecd575060408051601f3d908101601f19168201909252610eca91810190611f73565b60015b610f34573d808015610efa576040519150601f19603f3d011682016040523d82523d5f602084013e610eff565b606091505b5080515f03610f2c57604051636e41946d60e11b81526001600160a01b0387166004820152602401610483565b805181602001fd5b9050610f48565b610f4560016115ad565b90505b9695505050505050565b5f6105b08267ffffffffffffffff1660056115c4565b5f610b59848484611666565b5f82610f8657610f835f610f52565b92505b81610f9757610f945f610f52565b91505b6105ad83835f6116f3565b5f5160206121215f395f51905f528054604051630f8e573b60e21b8152600481018590526001600160a01b03848116602483015290911690633e395cec906044015b5f604051808303815f87803b158015610ffb575f5ffd5b505af115801561100d573d5f5f3e3d5ffd5b50505050505050565b5f805f5160206121215f395f51905f5280546040516382027b6d60e01b8152600481018790526001600160a01b0386811660248301529293509116906382027b6d90604401602060405180830381865afa158015611076573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061109a9190611fdf565b949350505050565b600780546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f8181527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0160205260408120546060917f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf009190036111715760405163d66ca67560e01b815260040160405180910390fd5b5f838152600182016020908152604091829020805483518184028101840190945280845290918301828280156111c457602002820191905f5260205f20905b8154815260200190600101908083116111b0575b5050505050915050919050565b5f5f835160206111e19190612012565b6111ec906020612012565b90505f8482604051602001611202929190612025565b60405160208183030381529060405290505f6112285f5160206121215f395f51905f5290565b60038101546040516378542ead60e01b81529192506001600160a01b0316906378542ead9061125f908a9086908a90600401612079565b6020604051808303815f875af115801561127b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061129f9190611fdf565b979650505050505050565b7f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0080545f5160206121215f395f51905f528054604051637d6e912360e11b81529293926001600160a01b039091169063fadd22469061130d9089906004016120b1565b5f604051808303815f87803b158015611324575f5ffd5b505af1158015611336573d5f5f3e3d5ffd5b5050506002820154604051633263b83b60e01b81526001600160a01b039091169150633263b83b9086906113729087908b908b906004016120c3565b5f604051808303818588803b158015611389575f5ffd5b505af115801561139b573d5f5f3e3d5ffd5b50505050506113aa83876117b9565b8154825f6113b7836120f4565b919050555050509392505050565b5f80806001600160a01b0386166113fb576113e26003548561184c565b90925090506113f081611896565b50600381905561147f565b6001600160a01b0386165f90815260208190526040902054868161143e57604051636b8830d760e11b81526001600160a01b039091166004820152602401610483565b5061144981866118a5565b909350915061145782611896565b5061146282886115a2565b50506001600160a01b0386165f9081526020819052604090208190555b611492828561148d5f610f52565b610f68565b92506001600160a01b0385166114c4576114ae60035484610f74565b90506114b981611896565b506003819055611518565b6001600160a01b0385165f908152602081905260409020546114e690846118d0565b90506114f181611896565b506114fc81866115a2565b506001600160a01b0385165f9081526020819052604090208190555b6001600160a01b038616156115335761153183876115a2565b505b6001600160a01b0385161561154e5761154c83866115a2565b505b61155783611896565b5082856001600160a01b0316876001600160a01b03167f67500e8d0ed826d2194f514dd0d8124f35648ab6e3fb5e6ed867134cffe661e960405160405180910390a450509392505050565b5f610bc583836118fe565b5f6105b0826115bc575f6115bf565b60015b60ff165f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b81525f915f5160206121215f395f51905f52916001600160a01b0390911690639cd07acb90611626908790879060040161210c565b6020604051808303815f875af1158015611642573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061109a9190611f73565b5f805f5160206121215f395f51905f526001810154604051637702dcff60e01b81526004810188905260248101879052604481018690529192506001600160a01b031690637702dcff906064016020604051808303815f875af11580156116cf573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061043f9190611f73565b5f5f82156117065750600160f81b611709565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040516303056db360e31b815260048101879052602481018690526001600160f81b0319831660448201525f5160206121215f395f51905f52916001600160a01b03169063182b6d98906064015b6020604051808303815f875af1158015611795573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f489190611f73565b5f8281527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0160205260409020547f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf00901561182657604051633f06d22b60e01b815260040160405180910390fd5b5f8381526001820160209081526040909120835161184692850190611a86565b50505050565b5f80836118675761185d60016115ad565b915082905061188f565b5f61187285856118d0565b905061187e8186611944565b925061188b838287610f68565b9150505b9250929050565b5f6118a182306118fe565b5090565b5f5f6118b18484611944565b91506118c7826118c18686610f74565b86610f68565b90509250929050565b5f826118e2576118df5f610f52565b92505b816118f3576118f05f610f52565b91505b6105ad83835f611972565b5f5160206121215f395f51905f528054604051635ca4b5b160e11b8152600481018590526001600160a01b0384811660248301529091169063b9496b6290604401610fe4565b5f82611956576119535f610f52565b92505b81611967576119645f610f52565b91505b6105ad83835f6119fc565b5f5f82156119855750600160f81b611988565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163022f65e760e31b815260048101879052602481018690526001600160f81b0319831660448201525f5160206121215f395f51905f52916001600160a01b03169063117b2f3890606401611779565b5f5f8215611a0f5750600160f81b611a12565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051631391547f60e01b815260048101879052602481018690526001600160f81b0319831660448201525f5160206121215f395f51905f52916001600160a01b031690631391547f90606401611779565b828054828255905f5260205f20908101928215611abf579160200282015b82811115611abf578251825591602001919060010190611aa4565b506118a19291505b808211156118a1575f8155600101611ac7565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6105ad6020830184611ada565b80356001600160a01b0381168114611b30575f5ffd5b919050565b5f5f83601f840112611b45575f5ffd5b50813567ffffffffffffffff811115611b5c575f5ffd5b60208301915083602082850101111561188f575f5ffd5b5f5f5f5f60608587031215611b86575f5ffd5b611b8f85611b1a565b935060208501359250604085013567ffffffffffffffff811115611bb1575f5ffd5b611bbd87828801611b35565b95989497509550505050565b5f60208284031215611bd9575f5ffd5b6105ad82611b1a565b5f5f5f5f5f5f5f60a0888a031215611bf8575f5ffd5b611c0188611b1a565b9650611c0f60208901611b1a565b955060408801359450606088013567ffffffffffffffff811115611c31575f5ffd5b611c3d8a828b01611b35565b909550935050608088013567ffffffffffffffff811115611c5c575f5ffd5b611c688a828b01611b35565b989b979a50959850939692959293505050565b5f5f60408385031215611c8c575f5ffd5b611c9583611b1a565b946020939093013593505050565b5f5f5f5f5f60608688031215611cb7575f5ffd5b85359450602086013567ffffffffffffffff811115611cd4575f5ffd5b611ce088828901611b35565b909550935050604086013567ffffffffffffffff811115611cff575f5ffd5b611d0b88828901611b35565b969995985093965092949392505050565b5f5f60408385031215611d2d575f5ffd5b611d3683611b1a565b91506118c760208401611b1a565b5f60208284031215611d54575f5ffd5b5035919050565b5f5f5f5f5f60808688031215611d6f575f5ffd5b611d7886611b1a565b9450611d8660208701611b1a565b935060408601359250606086013567ffffffffffffffff811115611cff575f5ffd5b5f5f60408385031215611db9575f5ffd5b611dc283611b1a565b9150602083013565ffffffffffff81168114611ddc575f5ffd5b809150509250929050565b5f5f5f5f5f5f60808789031215611dfc575f5ffd5b611e0587611b1a565b955060208701359450604087013567ffffffffffffffff811115611e27575f5ffd5b611e3389828a01611b35565b909550935050606087013567ffffffffffffffff811115611e52575f5ffd5b611e5e89828a01611b35565b979a9699509497509295939492505050565b5f5f5f60608486031215611e82575f5ffd5b611e8b84611b1a565b9250611e9960208501611b1a565b929592945050506040919091013590565b600181811c90821680611ebe57607f821691505b602082108103611edc57634e487b7160e01b5f52602260045260245ffd5b50919050565b5f60208284031215611ef2575f5ffd5b813567ffffffffffffffff81168114610b5c575f5ffd5b634e487b7160e01b5f52603260045260245ffd5b60548110611f3957634e487b7160e01b5f52602160045260245ffd5b9052565b8481526001600160a01b0384166020820152608060408201525f611f646080830185611ada565b905061043f6060830184611f1d565b5f60208284031215611f83575f5ffd5b5051919050565b6001600160a01b03861681526001600160a01b038516602082015283604082015260806060820152816080820152818360a08301375f81830160a090810191909152601f909201601f19160101949350505050565b5f60208284031215611fef575f5ffd5b81518015158114610b5c575f5ffd5b634e487b7160e01b5f52601160045260245ffd5b808201808211156105b0576105b0611ffe565b5f83518060208601845e9190910191825250602001919050565b5f8151808452602084019350602083015f5b8281101561206f578151865260209586019590910190600101612051565b5093949350505050565b606081525f61208b606083018661203f565b828103602084015261209d8186611ada565b90508281036040840152610f488185611ada565b602081525f6105ad602083018461203f565b838152606060208201525f6120db606083018561203f565b905063ffffffff60e01b83166040830152949350505050565b5f6001820161210557612105611ffe565b5060010190565b82815260408101610b5c6020830184611f1d56fe9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700a2646970667358221220ca35094e45fe259c52aae979792a3b016112093a3d69d5fdada4558fe6dea61764736f6c634300081b00339e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497019e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700";

type ETokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ETokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EToken__factory extends ContractFactory {
  constructor(...args: ETokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    owner: AddressLike,
    amount: BigNumberish,
    name_: string,
    symbol_: string,
    tokenURI_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      owner,
      amount,
      name_,
      symbol_,
      tokenURI_,
      overrides || {}
    );
  }
  override deploy(
    owner: AddressLike,
    amount: BigNumberish,
    name_: string,
    symbol_: string,
    tokenURI_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      owner,
      amount,
      name_,
      symbol_,
      tokenURI_,
      overrides || {}
    ) as Promise<
      EToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EToken__factory {
    return super.connect(runner) as EToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ETokenInterface {
    return new Interface(_abi) as ETokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EToken {
    return new Contract(address, _abi, runner) as unknown as EToken;
  }
}
